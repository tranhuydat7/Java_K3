-- Câu 1:Liệt kê MaDatp, MaDV, SoLuong của tất cả các dịch vụ có số lượng lớn hơn 3 và nhỏ hơn 10. (1 điểm)
select * 
from chi_tiet_su_dung_dv ct
where SOLUONG >3 and SOLUONG<10;
-- Câu 2: Cập nhật dữ liệu trên trường Giap thuộc bảng p tăng lên 10,000 VNĐ so với giá phòng hiện tại, chỉ cập nhật giá phòng của
-- những phòng có số khách tối đa lớn hơn 10. (1 điểm)
UPDATE phong
SET GIAPHONG=10.000
WHERE p.SOKHACHTOIDA >10;
--  Câu 3: Xóa tất cả những đơn đặt phòng (từ bảng dp) có trạng thái đặt (TrangThaiDat) là “Da huy”. (1 điểm)
SET FOREIGN_KEY_CHECKS=0;
delete 
FROM dat_phong
where TRANGTHAIDAT = 'Da huy';
SET FOREIGN_KEY_CHECKS=1;

-- Câu 4: Hiển thị TenKH của những khách hàng có tên bắt đầu là một trong các ký tự “H”, “N”, “M” và có độ dài tối đa là 20 ký tự. (1 điểm)
select TENKH
FROM khach_hang
where TENKH LIKE 'M%' OR TENKH LIKE 'H%' OR TENKH LIKE 'N%' ;

/* câu 5: Hiển thị TenKH của tất cả các khách hàng có trong hệ thống, TenKH nào trùng nhau thì chỉ hiển thị một lần. Sinh viên sử dụng hai cách khác nhau để
thực hiện yêu cầu trên, mỗi cách sẽ được 0,5 điểm. (1 điểm)*/
select distinct TENKH
FROM khach_hang;

/* Câu 6: Hiển thị MaDV, TenDV, DonViTinh, DonGia của những dịch vụ đi kèm có
DonViTinh là “lon” và có DonGia lớn hơn 10,000 VNĐ hoặc những dịch vụ đi
kèm có DonViTinh là “Cai” và có DonGia nhỏ hơn 5,000 VNĐ. (1 điểm)*/
SELECT * 
FROM dich_vu_di_kem
where (DONVITINH='lon' and DONGIA >10.000)  or (DONVITINH='Cai' and DONGIA <5.000);

/*Câu 7: Hiển thị MaDatp, Map, Loaip, SoKhachToiDa, Giap,
MaKH, TenKH, SoDT, NgayDat, GioBatDau, GioKetThuc, MaDichVu, SoLuong,
DonGia của những đơn đặt phòng có năm đặt phòng là “2016”, “2017” và đặt
những phòng có giá phòng &gt; 50,000 VNĐ/ 1 giờ. (1 điểm)*/
select dp.MADATPHONG, dp.MAPHONG, p.LOAIPHONG, p.SoKhachToiDa, p.GIAPHONG,
kh.MaKH, kh.TenKH, kh.SoDT, dp.NgayDat, dp.GioBatDau, dp.GioKetThuc, ct.MADV, ct.SoLuong,
dv.DonGia
from dat_phong dp
inner join phong p on p.MAPHONG= dp.MAPHONG
inner join khach_hang kh on dp.MAKH= kh.MAKH
inner join chi_tiet_su_dung_dv ct 
inner join dich_vu_di_kem dv on dv.MADV = ct.MADV
where year(dp.NGAYDAT) in(2016,2017) and p.GIAPHONG=50.000;
/*Câu 8: Hiển thị MaDatPhong, MaPhong, LoaiPhong, GiaPhong, TenKH, NgayDat,
TongTienHat, TongTienSuDungDichVu, TongTienThanhToan tương ứng với từng
mã đặt phòng có trong bảng DAT_PHONG. Những đơn đặt phòng nào không
sử dụng dịch vụ đi kèm thì cũng liệt kê thông tin của đơn đặt phòng đó
ra. (1 điểm)
TongTienHat = GiaPhong * (GioKetThuc – GioBatDau)
TongTienSuDungDichVu = SoLuong * DonGia
TongTienThanhToan = TongTienHat + sum (TongTienSuDungDichVu)*/
select dp.MADATPHONG, dp.MAPHONG, p.LOAIPHONG, p.GIAPHONG,
 kh.TenKH,  dp.NgayDat,
 round(p.GIAPHONG*((hour(subtime(dp.GIOKETTHUC,dp.GIOBATDAU)) +  minute(subtime(dp.GIOKETTHUC,dp.GIOBATDAU))/60)),3) Tienhat
 ,sum( ct.SOLUONG*dv.DONGIA) tiendichvu, 
  round(p.GIAPHONG*((hour(subtime(dp.GIOKETTHUC,dp.GIOBATDAU)) +  minute(subtime(dp.GIOKETTHUC,dp.GIOBATDAU))/60)),3)+sum( ct.SOLUONG*dv.DONGIA) tongtien
from dat_phong dp
inner join phong p on p.MAPHONG= dp.MAPHONG
inner join khach_hang kh on dp.MAKH= kh.MAKH
inner join chi_tiet_su_dung_dv ct 
inner join dich_vu_di_kem dv on dv.MADV = ct.MADV
 group by dp.MADATPHONG;
/*
Câu 9: Hiển thị MaKH, TenKH, DiaChi, SoDT của những khách hàng đã
từng đặt phòng karaoke có địa chỉ ở “Hoa xuan”. (1 điểm)*/
select kh.MAKH, kh.TENKH, kh.DIACHI, kh.SODT
from khach_hang kh
where kh.DIACHI='Hoa xuan' and kh.MAKH in (select distinct dat_phong.MAKH from dat_phong);
/*
Câu 10: Hiển thị MaPhong, LoaiPhong, SoKhachToiDa, GiaPhong, SoLanDat của
những phòng được khách hàng đặt có số lần đặt lớn hơn 2 lần và trạng thái đặt
là “Da dat”. (1 điểm)*/
select p.MAPHONG , p.LOAIPHONG,p.SOKHACHTOIDA, p.GIAPHONG, count(dat_phong.MAPHONG) SoLanDat
from phong p
inner join dat_phong
on p.MAPHONG= dat_phong.MAPHONG
where p.MAPHONG in (select distinct dat_phong.MAPHONG from dat_phong where TRANGTHAIDAT='Da dat')
group by dat_phong.MAPHONG;
