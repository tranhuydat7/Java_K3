use DB_Fastfood_System;

-- 5
select st.id as 'store_id', st.name as 'store_name', st.address, di.name as 'district_name' 
from stores st
left join districts di on st.district_id = di.id
left join cities ci on di.city_id = ci.id
where ci.name = "Hà Nội";

-- 6
select ord.id as 'order_id', ord.price, ord.payment_method, ord.status, ship.name, ord.created_at
from orders ord
left join customers cus on ord.customer_id = cus.id
left join shipping_units ship on ord.shipping_unit_id = ship.id
where cus.name = 'Merritt Fernandez';

-- 7
select pr.id as 'product_id', pr.name as 'product_name', ca.name as 'category_name', stp.status
from store_products stp
join products pr on stp.product_id = pr.id
join categories ca on pr.category_id = ca.id
join stores st on stp.store_id = st.id
where st.name = 'Lotteria Cầu Giấy';

-- 8
select cus.name, cus.email, cus.phone, cus.address, cus.birthday
from customers cus
where cus.name = 'Josiah Cline';

-- 9
update customers 
set customers.phone = 0338443113, customers.address = 'Phạm Hùng, Nam Từ Liêm, Hà Nội', customers.birthday = '2000-03-01'
where customers.id = 7;

-- 10
insert into orders value (28, 3, 2, 2, 3, 731720, 1, 3, 1, '2021-01-01 00:00:01', '2021-01-01 00:00:01');
insert into order_details values
(14, 28, 7, 4, '2021-01-01 00:00:01', '2021-01-01 00:00:01'),
(15, 28, 9, 4, '2021-01-01 00:00:01', '2021-01-01 00:00:01'),
(16, 28, 10, 2, '2021-01-01 00:00:01', '2021-01-01 00:00:01');

-- 11

-- 12
select orde.id as 'order_id', orde.price, orde.status, orde.created_at
from orders orde
left join customers cus on orde.customer_id = cus.id
where cus.name = 'Merritt Fernandez' and month(orde.created_at) = 3;

-- 13
select promotions.id, promotions.name, promotions.discount
from promotions
where day(promotions.apply_day) = day(now())
order by promotions.discount desc;

-- 14
select * from (
select p.name, sum(od.quantity) as 'quanlity' from store_products sp join products p on sp.product_id = p.id
join order_details od ON od.store_product_id = sp.id
where sp.store_id IN (select id from stores where name = 'Lotteria Trần Duy Hưng')
group by p.name
order by quanlity desc
limit 2
) as a
order by quanlity 
limit 1;

-- 15
select cus.name, count(ord.customer_id) as 'total_order'
from orders ord
join customers cus on ord.customer_id = cus.id
join stores st on ord.store_id = st.id
where st.name = 'Lotteria Cầu Giấy'
group by cus.name, cus.id
order by total_order desc
limit 3;

-- 16
select orde.id as 'order_id', orde.price, orde.payment_method, orde.created_at
from orders orde
left join stores st on orde.store_id = st.id
where st.name = 'Lotteria Cầu Giấy' and orde.payment_method = 1;

-- 17
select name, total_order 
from
	(select promotion_id, p.name, count(o.id) total_order 
    from orders o 
    join promotions p 
    on o.promotion_id = p.id 
    WHERE promotion_id is not null group by promotion_id, p.name
	union all
	select id, name, '0' total_order from promotions) as a
group by promotion_id;

-- 18
select stores.name, sum(orders.price) as 'total_price'
from orders
join stores on orders.store_id = stores.id
where month(orders.created_at) = 1
group by stores.name
having sum(orders.price) > 100000
limit 3;

-- 19
select DATE_FORMAT(created_at, "%Y-%m-%d") as 'order_date', payment_method, SUM(price) total_price
from orders
group by DATE_FORMAT(created_at, "%Y-%m-%d"), payment_method;

-- 20
select * from 
	(select su.name, count(o.shipping_unit_id) total_order
	from orders o join shipping_units su on o.shipping_unit_id = su.id
	group by su.name) as a
order by total_order
limit 1;